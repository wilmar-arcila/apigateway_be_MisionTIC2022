openapi: 3.0.3
info:
  title: Gestión Académica
  description: |-
    Este es un servicio de Gestión Académica basada en el estándar OpenAPI 3.0.
    La intención de este servicio es permitir la gestión académica (_inscripciones y notas_) y administrativa (_facultades, programas, profesores, estudiantes, etc._) de una institución académica.

    - [Repositorio del microservicio ApiGateway](https://github.com/wilmar-arcila/apigateway_be_MisionTIC2022)
    - [Repositorio del microservicio de Seguridad](https://github.com/wilmar-arcila/apigateway_be_MisionTIC2022)
    - [Repositorio del microservicio de GestionAcademica](https://github.com/wilmar-arcila/apigateway_be_MisionTIC2022)
    - [Definición de la API pública](https://github.com/wilmar-arcila/apigateway_be_MisionTIC2022/tree/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: MIT
    url: https://opensource.org/license/mit
  version: 0.1.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:7777
tags:
  - name: Servicio
    description: Verificación del estado del servicio
  - name: Api
    description: Información sobre la API
  - name: Login
    description: Autenticación ante el sistema
  - name: Inscripciones
    description: Gestión de inscripciones de estudiantes a los cursos (incluye la nota final)
  - name: Materias
    description: Administración de las asignaturas
paths:
  /:
    get:
      tags:
        - Servicio
      summary: Devuelve el 'uptime' del servicio
      responses:
        '200':
          description: Operación existosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uptime'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Uptime'
  /api/doc:
    get:
      tags:
        - Api
      summary: Muestra la documentación de la API pública del servicio
      responses:
        '200':
          description: Operación existosa
          content:
            text/html:
              schema:
                type: string
  /login:
    post:
      tags:
        - Login
      summary: Endpoint para autenticación
      description: Se envían las credenciales para acceder al sistema. Si la petición es exitosa devuelve un ___Access Token___ válido por una hora.
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credenciales'
        required: true
      responses:
        '200':
          description: Autenticación exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Credenciales erróneas o usuario sin rol asociado
components:
  schemas:
    Uptime:
      type: object
      properties:
        message:
          type: string
          example: Server running...
        uptime:
          type: number
          example: 0:00:07.081651
      xml:
        name: uptime
    Token:
      type: object
      properties:
        token:
          type: string
          example: 12A345B678C90Dxxxxxxxxxxx
        user_id:
          type: number
          example: 10
      xml:
        name: access_token
    Credenciales:
      type: object
      properties:
        email:
          type: string
          example: usuario@dominio.com
        contrasena:
          type: string
          example: contraseñasupersegura
      xml:
        name: access_token